-- Address decode logic for ipbus fabric
--
-- This file has been AUTOGENERATED from the address table - do not hand edit
--
-- We assume the synthesis tool is clever enough to recognise exclusive conditions
-- in the if statement.
--
-- Dave Newbold, February 2011

library IEEE;
use IEEE.STD_LOGIC_1164.all;
use ieee.numeric_std.all;
use work.ipbus.all;

package ipbus_addr_decode is

  function ipbus_addr_sel(signal addr : in std_logic_vector(31 downto 0)) return integer;

end ipbus_addr_decode;

package body ipbus_addr_decode is
  
  function ipbus_addr_sel(signal addr : in std_logic_vector(31 downto 0)) return integer is
    variable sel : integer;
  begin
                -- START automatically  generated VHDL the Wed Jul 10 19:55:13 2013 
		if    std_match(addr, "---------------------------0000-") then
			sel := 0; -- ctrl.id / base 0x00000000 / mask 0x0000001e
		elsif std_match(addr, "---------------------------0001-") then
			sel := 1; -- ctrl.csr / base 0x00000002 / mask 0x0000001e
		elsif std_match(addr, "---------------------------0010-") then
			sel := 2; -- ctrl.buf_test / base 0x00000004 / mask 0x0000001e
		elsif std_match(addr, "---------------------------10---") then
			sel := 3; -- ttc.ttc / base 0x00000010 / mask 0x0000001e
		elsif std_match(addr, "---------------------------1100-") then
			sel := 4; -- ttc.ttc_freq / base 0x00000018 / mask 0x0000001e
		elsif std_match(addr, "---------------------------1101-") then
			sel := 5; -- ttc.ttc_hist_buf / base 0x0000001a / mask 0x0000001e
		-- END automatic generated VHDL

                else
                        sel := 99;
                end if;
                return sel;
  end ipbus_addr_sel;
                
end ipbus_addr_decode;

