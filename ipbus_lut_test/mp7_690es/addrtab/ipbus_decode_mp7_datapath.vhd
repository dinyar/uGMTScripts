-- Address decode logic for ipbus fabric
-- 
-- This file has been AUTOGENERATED from the address table - do not hand edit
-- 
-- We assume the synthesis tool is clever enough to recognise exclusive conditions
-- in the if statement.
-- 
-- Dave Newbold, February 2011

library IEEE;
use IEEE.STD_LOGIC_1164.all;
use ieee.numeric_std.all;

package ipbus_decode_mp7_datapath is

  constant IPBUS_SEL_WIDTH: positive := 5; -- Should be enough for now?
  subtype ipbus_sel_t is std_logic_vector(IPBUS_SEL_WIDTH - 1 downto 0);
  function ipbus_sel_mp7_datapath(addr : in std_logic_vector(31 downto 0)) return ipbus_sel_t;

-- START automatically  generated VHDL the Mon Apr  7 15:08:05 2014 
  constant N_SLV_CSR: integer := 0;
  constant N_SLV_BUFFERS: integer := 1;
  constant N_SLV_DEBUG: integer := 2;
  constant N_SLV_ALIGN: integer := 3;
  constant N_SLV_MGT: integer := 4;
  constant N_SLV_DRP: integer := 5;
  constant N_SLV_DRP_COM: integer := 6;
  constant N_SLAVES: integer := 7;
-- END automatically generated VHDL

    
end ipbus_decode_mp7_datapath;

package body ipbus_decode_mp7_datapath is

  function ipbus_sel_mp7_datapath(addr : in std_logic_vector(31 downto 0)) return ipbus_sel_t is
    variable sel: ipbus_sel_t;
  begin

-- START automatically  generated VHDL the Mon Apr  7 15:08:05 2014 
    if    std_match(addr, "---------------------00--0-0-00-") then
      sel := ipbus_sel_t(to_unsigned(N_SLV_CSR, IPBUS_SEL_WIDTH)); -- csr / base 0x00000000 / mask 0x00000656
    elsif std_match(addr, "---------------------00--0-0-01-") then
      sel := ipbus_sel_t(to_unsigned(N_SLV_BUFFERS, IPBUS_SEL_WIDTH)); -- buffers / base 0x00000002 / mask 0x00000656
    elsif std_match(addr, "---------------------00--0-0-10-") then
      sel := ipbus_sel_t(to_unsigned(N_SLV_DEBUG, IPBUS_SEL_WIDTH)); -- debug / base 0x00000004 / mask 0x00000656
    elsif std_match(addr, "---------------------00--0-1----") then
      sel := ipbus_sel_t(to_unsigned(N_SLV_ALIGN, IPBUS_SEL_WIDTH)); -- align / base 0x00000010 / mask 0x00000650
    elsif std_match(addr, "---------------------00--1------") then
      sel := ipbus_sel_t(to_unsigned(N_SLV_MGT, IPBUS_SEL_WIDTH)); -- mgt / base 0x00000040 / mask 0x00000640
    elsif std_match(addr, "---------------------01---------") then
      sel := ipbus_sel_t(to_unsigned(N_SLV_DRP, IPBUS_SEL_WIDTH)); -- drp / base 0x00000200 / mask 0x00000600
    elsif std_match(addr, "---------------------10---------") then
      sel := ipbus_sel_t(to_unsigned(N_SLV_DRP_COM, IPBUS_SEL_WIDTH)); -- drp_com / base 0x00000400 / mask 0x00000600
-- END automatically generated VHDL

    else
        sel := ipbus_sel_t(to_unsigned(N_SLAVES, IPBUS_SEL_WIDTH));
    end if;

    return sel;

  end function ipbus_sel_mp7_datapath;

end ipbus_decode_mp7_datapath;

